class Solution:
    def minCostClimbingStairs(self, cost: List[int]) -> int:
        n = len(cost)
        dp = [0] * (n + 1)
        for i in range(2, n + 1):
            dp[i] = min(dp[i - 1] + cost[i - 1], dp[i - 2] + cost[i - 2])
        return dp[n]
        
class Solution:
    def minCostClimbingStairs(self, cost: List[int]) -> int:
        n=len(cost)
        prev2 = prev1 =0
        for i in range(2,n+1):
            nxt = min(prev1+cost[i-1],prev2+cost[i-2])
            prev2 = prev1 
            prev1 = nxt 
        return nxt

Time: O(n)
Space: O(1)
