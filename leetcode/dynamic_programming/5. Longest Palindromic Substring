class Solution:
    def longestPalindrome(self, s: str) -> str:
        n=len(s)
        if n <2:
            return s
        dp=[[False]*n for _ in range(n)]
        for i in range(n):
            dp[i][i]=True        
        maxl=1
        begin=0       
        for j in range(1,n):
            for i in range(j):
                if s[i] != s[j]:
                    dp[i][j]=False
                else:
                    if j-i<3:
                        dp[i][j]=True
                    else:
                        dp[i][j]=dp[i+1][j-1]
                        
                if dp[i][j] and j-i+1>maxl:
                    maxl=j-i+1
                    begin=i
        return s[begin:begin+maxl]
