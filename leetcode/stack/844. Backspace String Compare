class Solution:
    def backspaceCompare(self, s: str, t: str) -> bool:
        def get_string(inputString: str) -> str:
            stack=list()
            for i in inputString:
                if i != "#":
                    stack.append(i)
                elif stack:
                    stack.pop()
            return "".join(stack)
        
        return get_string(s) == get_string(t)
Time: O(n+m)
Space: O(n+m)

class Solution:
    def backspaceCompare(self, s: str, t: str) -> bool:
            skip_s=skip_t=0
            i=len(s)-1
            j=len(t)-1
            
            while i >=0 or j >=0:
                while i >=0:
                    if s[i] == "#":
                        skip_s+=1
                        i-=1
                    elif skip_s >0:
                        skip_s-=1
                        i-=1
                    else:
                        break                         
                while j >=0:
                    if t[j] == "#":
                        skip_t+=1
                        j-=1
                    elif skip_t >0:
                        skip_t-=1
                        j-=1
                    else:
                        break
                if i>=0 and j>=0:
                    if s[i] != t[j]:
                        return False   
                    i-=1
                    j-=1
                elif i>=0 or j>=0:
                    return False
            
            return True
            
Time: O(n+m)
Space: O(1)

two pointer back track
            
