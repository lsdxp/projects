"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
"""

class Solution:
    def preorder(self, root: 'Node') -> List[int]:
        def preorder(root: 'Node'):
            if not root:
                return list()
            res.append(root.val)
            
            for child in root.children:
                childTemp = preorder(child)
            return res
                 
        res = list ()
        preorder(root)
        return res
        


"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
"""

class Solution:
    def preorder(self, root: 'Node') -> List[int]:
        if not root:
            return list()
        res = list()
        stack = list()
        stack.append(root)
        while stack:
            res.append(root.val)                
            stack.extend(root.children[::-1])
            root=stack.pop()  
        return res 
       
put root node into stack first

