primitive: number,string,boolean,Null,Undefined,symbol,object



typeof:

let newVariable = 'Playing around with typeof.';

console.log(typeof newVariable);

newVariable = 1;

console.log(typeof newVariable);


operator:

Is equal to: ===
Is not equal to: !==

logical:

&& 
||
!

truthy falsey:

So which values are falsyâ€” or evaluate to false when checked as a condition? The list of falsy values includes:

0
Empty strings like "" or ''
null which represent when there is no value at all
undefined which represent when a declared variable lacks a value
NaN, or Not a Number


// Use short circuit evaluation to assign writingUtensil variable below:
let writingUtensil = tool || 'pen';


arrow function:

const plantNeedsWater = (day) => {
  if (day === 'Wednesday') {
    return true;
  } else {
    return false;
  }
};

Variables declared with the const keyword cannot be reassigned. However, elements in an array declared with const remain mutable. 
Meaning that we can change the contents of a const array, but cannot reassign a new array or a different value.
